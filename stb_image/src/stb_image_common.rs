// Generated by Hebron at 12/26/2021 1:58:08 AM

use std;
use c_runtime;
use crate::*;

pub const A: i32 = 0;

pub const B: i32 = 10;

pub const C: i32 = 11;

pub const STBI__SCAN_header: i32 = 2;

pub const STBI__SCAN_load: i32 = 0;

pub const STBI__SCAN_type: i32 = 1;

pub const STBI_default: i32 = 0;

pub const STBI_grey: i32 = 1;

pub const STBI_grey_alpha: i32 = 2;

pub const STBI_ORDER_BGR: i32 = 1;

pub const STBI_ORDER_RGB: i32 = 0;

pub const STBI_rgb: i32 = 3;

pub const STBI_rgb_alpha: i32 = 4;

#[derive(Debug, Copy, Clone)]
pub struct stbi__context {
	pub img_x:u32,
	pub img_y:u32,
	pub img_n:i32,
	pub img_out_n:i32,
	pub io:stbi_io_callbacks,
	pub io_user_data:*mut u8,
	pub read_from_callbacks:i32,
	pub buflen:i32,
	pub buffer_start:[u8;128],
	pub callback_already_read:i32,
	pub img_buffer:*mut u8,
	pub img_buffer_end:*mut u8,
	pub img_buffer_original:*mut u8,
	pub img_buffer_original_end:*mut u8,
}

#[derive(Debug, Copy, Clone)]
pub struct stbi__result_info {
	pub bits_per_channel:i32,
	pub num_channels:i32,
	pub channel_order:i32,
}

#[derive(Debug, Copy, Clone)]
pub struct stbi_io_callbacks {
	pub read:*mut fn(arg0: *mut u8, arg1: *mut i8, arg2: i32) -> i32,
	pub skip:*mut fn(arg0: *mut u8, arg1: i32),
	pub eof:*mut fn(arg0: *mut u8) -> i32,
}

impl std::default::Default for stbi__context {
	fn default() -> Self {
		stbi__context {
			img_x: 0,
			img_y: 0,
			img_n: 0,
			img_out_n: 0,
			io: stbi_io_callbacks::default(),
			io_user_data: std::ptr::null_mut(),
			read_from_callbacks: 0,
			buflen: 0,
			buffer_start: [0;128],
			callback_already_read: 0,
			img_buffer: std::ptr::null_mut(),
			img_buffer_end: std::ptr::null_mut(),
			img_buffer_original: std::ptr::null_mut(),
			img_buffer_original_end: std::ptr::null_mut(),
		}
	}
}

impl std::default::Default for stbi__result_info {
	fn default() -> Self {
		stbi__result_info {
			bits_per_channel: 0,
			num_channels: 0,
			channel_order: 0,
		}
	}
}

impl std::default::Default for stbi_io_callbacks {
	fn default() -> Self {
		stbi_io_callbacks {
			read: std::ptr::null_mut(),
			skip: std::ptr::null_mut(),
			eof: std::ptr::null_mut(),
		}
	}
}

